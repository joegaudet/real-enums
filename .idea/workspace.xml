<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7738c72c-6d58-4e5a-a5fc-5b4e1d01d544" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.test.ts" beforeDir="false" afterPath="$PROJECT_DIR$/index.test.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/index.ts" beforeDir="false" afterPath="$PROJECT_DIR$/index.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/tsconfig.json" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2whHr8KFcon2c6jFRn9d3EHk6Zk" />
  <component name="ProjectViewState">
    <option name="autoscrollFromSource" value="true" />
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;Vitest.decorators allow for simply interface to check for matches.executor&quot;: &quot;Debug&quot;,
    &quot;Vitest.enumerating teh values of the enum.executor&quot;: &quot;Run&quot;,
    &quot;Vitest.enums can be used as collecitons for inlcudes.executor&quot;: &quot;Debug&quot;,
    &quot;Vitest.index.test.ts.executor&quot;: &quot;Run&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/joegaudet/dev/real-enums&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;ruby.structure.view.model.defaults.configured&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;ml.llm.AIAssistantPromptsLibrary&quot;,
    &quot;ts.external.directory.path&quot;: &quot;/Users/joegaudet/dev/real-enums/node_modules/typescript/lib&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="Vitest.index.test.ts">
    <configuration name="decorators allow for simply interface to check for matches" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/index.test.ts" />
      <test-names>
        <test-name value="decorators allow for simply interface to check for matches" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="enumerating teh values of the enum" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/index.test.ts" />
      <test-names>
        <test-name value="enumerating teh values of the enum" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="enums can be used as collecitons for inlcudes" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/index.test.ts" />
      <test-names>
        <test-name value="enums can be used as collecitons for inlcudes" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="index.test.ts" type="JavaScriptTestRunnerVitest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <vitest-package value="$PROJECT_DIR$/node_modules/vitest" />
      <working-dir value="$PROJECT_DIR$" />
      <vitest-options value="--run" />
      <envs />
      <scope-kind value="TEST_FILE" />
      <test-file value="$PROJECT_DIR$/index.test.ts" />
      <method v="2" />
    </configuration>
    <configuration name="index.ts" type="NodeJSConfigurationType" temporary="true" nameIsGenerated="true" path-to-js-file="$PROJECT_DIR$/index.ts" typescript-loader="bundled" working-dir="$PROJECT_DIR$">
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Vitest.index.test.ts" />
        <item itemvalue="Node.js.index.ts" />
        <item itemvalue="Vitest.enums can be used as collecitons for inlcudes" />
        <item itemvalue="Vitest.decorators allow for simply interface to check for matches" />
        <item itemvalue="Vitest.enumerating teh values of the enum" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-js-predefined-d6986cc7102b-822845ee3bb5-JavaScript-RM-243.23654.167" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SpringUtil" SPRING_PRE_LOADER_OPTION="true" RAKE_SPRING_PRE_LOADER_OPTION="true" RAILS_SPRING_PRE_LOADER_OPTION="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7738c72c-6d58-4e5a-a5fc-5b4e1d01d544" name="Changes" comment="" />
      <created>1746487081979</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746487081979</updated>
      <workItem from="1746487083342" duration="12714000" />
      <workItem from="1747758896111" duration="3348000" />
      <workItem from="1748233436085" duration="4000" />
      <workItem from="1753302026132" duration="319000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/index.ts</url>
          <line>51</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="javascript">
          <url>file://$PROJECT_DIR$/index.test.ts</url>
          <line>23</line>
          <option name="timeStamp" value="2" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>